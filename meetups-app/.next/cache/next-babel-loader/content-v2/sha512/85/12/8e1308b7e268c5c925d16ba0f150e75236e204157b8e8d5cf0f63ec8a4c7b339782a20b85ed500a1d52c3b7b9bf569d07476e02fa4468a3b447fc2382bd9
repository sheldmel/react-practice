{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\dmell\\\\OneDrive\\\\Desktop\\\\Projects\\\\React JS\\\\react-practice\\\\meetups-app\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from \"react\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetailsPage = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    image: \"\",\n    title: \"\",\n    address: \"\",\n    description: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(`mongodb+srv://Shelton:test123@cluster0.qusgr.mongodb.net/meetups?retryWrites=true&w=majority`);\n  const db = client.db();\n  const meetups = db.collection('meetups');\n  const result = await meetups.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: result.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(`mongodb+srv://Shelton:test123@cluster0.qusgr.mongodb.net/meetups?retryWrites=true&w=majority`);\n  const db = client.db();\n  const meetups = db.collection('meetups');\n  const result = await meetups.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: result\n    },\n    revalidate: 1\n  };\n};\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["C:/Users/dmell/OneDrive/Desktop/Projects/React JS/react-practice/meetups-app/pages/[meetupId]/index.js"],"names":["React","MeetupDetails","MongoClient","MeetupDetailsPage","getStaticPaths","client","connect","db","meetups","collection","result","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","findOne","props","meetupData","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,sBAAO,QAAC,aAAD;AAAe,IAAA,KAAK,EAAC,EAArB;AAAwB,IAAA,KAAK,EAAC,EAA9B;AAAiC,IAAA,OAAO,EAAC,EAAzC;AAA4C,IAAA,WAAW,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,OAAO,MAAMC,cAAc,GAAG,YAAY;AAExC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CAAqB,8FAArB,CAArB;AACE,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,OAAO,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAhB;AACA,QAAMC,MAAM,GAAG,MAAMF,OAAO,CAACG,IAAR,CAAa,EAAb,EAAiB;AAACC,IAAAA,GAAG,EAAE;AAAN,GAAjB,EAA2BC,OAA3B,EAArB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAGF,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,MAAM,CAACO,GAAP,CAAWC,MAAM,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AAAV,KAAL,CAAjB;AAFF,GAAP;AAID,CAbM;AAeP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CAAqB,8FAArB,CAArB;AACE,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,OAAO,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAhB;AACA,QAAMC,MAAM,GAAG,MAAMF,OAAO,CAACgB,OAAR,CAAgB;AAACZ,IAAAA,GAAG,EAAEQ;AAAN,GAAhB,CAArB;AACAf,EAAAA,MAAM,CAACS,KAAP;AAEF,SAAO;AACLW,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEhB;AADP,KADF;AAILiB,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD,CAfM;AAiBP,eAAexB,iBAAf","sourcesContent":["import React from \"react\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nconst MeetupDetailsPage = () => {\r\n  return <MeetupDetails image=\"\" title=\"\" address=\"\" description=\"\" />;\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n\r\n  const client = await MongoClient.connect(`mongodb+srv://Shelton:test123@cluster0.qusgr.mongodb.net/meetups?retryWrites=true&w=majority`)\r\n    const db = client.db()\r\n    const meetups = db.collection('meetups');\r\n    const result = await meetups.find({}, {_id: 1}).toArray();\r\n    client.close();\r\n\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: result.map(meetup => ({ params: {meetupId: meetup._id.toString()}}))\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(`mongodb+srv://Shelton:test123@cluster0.qusgr.mongodb.net/meetups?retryWrites=true&w=majority`)\r\n    const db = client.db()\r\n    const meetups = db.collection('meetups');\r\n    const result = await meetups.findOne({_id: meetupId});\r\n    client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: result\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default MeetupDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}