{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dmell\\\\OneDrive\\\\Desktop\\\\Projects\\\\React JS\\\\react-practice\\\\meetups-app\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport React from \"react\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nvar MeetupDetailsPage = function MeetupDetailsPage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = MeetupDetailsPage;\nexport var __N_SSG = true;\nexport default MeetupDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailsPage\");","map":{"version":3,"sources":["C:/Users/dmell/OneDrive/Desktop/Projects/React JS/react-practice/meetups-app/pages/[meetupId]/index.js"],"names":["React","MeetupDetails","MeetupDetailsPage","props","meetupData","image","title","address","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACnC,sBAAO,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAAvC;AAA8C,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAAtE;AAA6E,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAAvG;AAAgH,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAA9I;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAFD;;KAAMN,iB;;AA0CN,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nconst MeetupDetailsPage = (props) => {\r\n  return <MeetupDetails image={props.meetupData.image} title={props.meetupData.title} address={props.meetupData.address} description={props.meetupData.description} />;\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n\r\n  const client = await MongoClient.connect(`mongodb+srv://Shelton:test123@cluster0.qusgr.mongodb.net/meetups?retryWrites=true&w=majority`)\r\n    const db = client.db()\r\n    const meetups = db.collection('meetups');\r\n    const result = await meetups.find({}, {_id: 1}).toArray();\r\n    client.close();\r\n\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: result.map(meetup => ({ params: {meetupId: meetup._id.toString()}}))\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(`mongodb+srv://Shelton:test123@cluster0.qusgr.mongodb.net/meetups?retryWrites=true&w=majority`)\r\n    const db = client.db()\r\n    const meetups = db.collection('meetups');\r\n    const result = await meetups.findOne({_id: ObjectId(meetupId)});\r\n    client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: result._id.toString(),\r\n        title: result.title,\r\n        address: result.address,\r\n        image: result.image,\r\n        description: result.description\r\n      }\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default MeetupDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}